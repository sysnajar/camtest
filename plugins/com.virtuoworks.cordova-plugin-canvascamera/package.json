{
  "_args": [
    [
      {
        "raw": "https://github.com/VirtuoWorks/CanvasCameraPlugin.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/VirtuoWorks/CanvasCameraPlugin.git",
        "spec": "git+https://github.com/VirtuoWorks/CanvasCameraPlugin.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:VirtuoWorks/CanvasCameraPlugin.git",
          "sshUrl": "git+ssh://git@github.com/VirtuoWorks/CanvasCameraPlugin.git",
          "httpsUrl": "git+https://github.com/VirtuoWorks/CanvasCameraPlugin.git",
          "gitUrl": "git://github.com/VirtuoWorks/CanvasCameraPlugin.git",
          "shortcut": "github:VirtuoWorks/CanvasCameraPlugin",
          "directUrl": "https://raw.githubusercontent.com/VirtuoWorks/CanvasCameraPlugin/master/package.json"
        }
      },
      "/home/sysnajar/work/camtest/node_modules"
    ]
  ],
  "_from": "git+https://github.com/VirtuoWorks/CanvasCameraPlugin.git",
  "_id": "com.virtuoworks.cordova-plugin-canvascamera@1.0.9",
  "_inCache": true,
  "_location": "/com.virtuoworks.cordova-plugin-canvascamera",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/VirtuoWorks/CanvasCameraPlugin.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/VirtuoWorks/CanvasCameraPlugin.git",
    "spec": "git+https://github.com/VirtuoWorks/CanvasCameraPlugin.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:VirtuoWorks/CanvasCameraPlugin.git",
      "sshUrl": "git+ssh://git@github.com/VirtuoWorks/CanvasCameraPlugin.git",
      "httpsUrl": "git+https://github.com/VirtuoWorks/CanvasCameraPlugin.git",
      "gitUrl": "git://github.com/VirtuoWorks/CanvasCameraPlugin.git",
      "shortcut": "github:VirtuoWorks/CanvasCameraPlugin",
      "directUrl": "https://raw.githubusercontent.com/VirtuoWorks/CanvasCameraPlugin/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/VirtuoWorks/CanvasCameraPlugin.git#82a3b127760159ad7c4083f36a9f7aa9a7edb9ea",
  "_shasum": "342c54a2cfc3100a5237e63876c7a28800b7a3a2",
  "_shrinkwrap": null,
  "_spec": "https://github.com/VirtuoWorks/CanvasCameraPlugin.git",
  "_where": "/home/sysnajar/work/camtest/node_modules",
  "bugs": {
    "url": "https://github.com/VirtuoWorks/CanvasCameraPlugin/issues"
  },
  "contributors": [
    {
      "name": "Virtuoworks",
      "url": "https://www.virtuoworks.com/"
    },
    {
      "name": "Sami Radi",
      "email": "sami.radi@virtuoworks.com",
      "url": "https://github.com/Sami-Radi"
    },
    {
      "name": "SÃ©bastien Guillon",
      "email": "sebastien.guillon@virtuoworks.com",
      "url": "https://github.com/Sebastien-Guillon"
    }
  ],
  "cordova": {
    "id": "com.virtuoworks.cordova-plugin-canvascamera",
    "platforms": [
      "android",
      "ios"
    ]
  },
  "dependencies": {},
  "description": "A Cordova plugin to display video from the device's camera into an HTML canvas element.",
  "devDependencies": {},
  "engines": {
    "cordovaDependencies": {
      "3.0.0": {
        "cordova": ">100"
      }
    }
  },
  "gitHead": "82a3b127760159ad7c4083f36a9f7aa9a7edb9ea",
  "homepage": "https://github.com/VirtuoWorks/CanvasCameraPlugin#readme",
  "keywords": [
    "ecosystem:cordova",
    "cordova-android",
    "cordova-ios",
    "cordova",
    "camera",
    "canvas"
  ],
  "license": "MIT",
  "name": "com.virtuoworks.cordova-plugin-canvascamera",
  "optionalDependencies": {},
  "readme": "[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Codacy Badge][codacy-image]][codacy-url]\n\n# Cordova CanvasCamera plugin\n\n## Plugin's Purpose\nThe purpose of the plugin is to capture video to preview camera in a web page's canvas element.\nAllows to select front or back camera and to control the flash.\n\n## Working Demo\nHaving trouble using CanvasCamera Plugin ? [Check our working demo here](https://github.com/VirtuoWorks/CanvasCameraDemo).\n\n## Supported Platforms\n- iOS\n- Android\n\n## Dependencies\n[Cordova][cordova] will check all dependencies and install them if they are missing.\n\n## Installation\nThe plugin can either be installed into the local development environment or cloud based through [PhoneGap Build][PGB].\n\n### Adding the Plugin to your project\nThrough the [Command-line Interface][CLI]:\n\n```bash\ncordova plugin add https://github.com/VirtuoWorks/CanvasCameraPlugin.git && cordova prepare\n```\n\n### Removing the Plugin from your project\nThrough the [Command-line Interface][CLI]:\n\n```bash\ncordova plugin remove com.virtuoworks.cordova-plugin-canvascamera\n```\n\n## Using the plugin\nThe plugin creates the object ```window.plugin.CanvasCamera``` with the following methods:\n\n### Plugin initialization\nThe plugin and its methods are not available before the *deviceready* event has been fired.\nCall `initialize` with a reference to the canvas object used to preview the video and a second, optional, reference to a thumbnail canvas.\n\n```javascript\ndocument.addEventListener('deviceready', function () {\n\n    // Call the initialize() function with canvas element reference\n    var objCanvas = document.getElementById('canvas');\n    window.plugin.CanvasCamera.initialize(objCanvas);\n    // window.plugin.CanvasCamera is now available\n\n}, false);\n```\n\n### `start`\nStart capturing video as images from camera to preview camera on web page.<br>\n`capture` callback function will be called with image data (image file url) each time the plugin takes an image for a frame.<br>\n\n```javascript\nwindow.plugin.CanvasCamera.start(options);\n```\n\nThis function starts a video capturing session, then the plugin takes each frame as a JPEG image and gives its url to web page calling the `capture` callback function with the image url(s).<br>\nThe `capture` callback function will draw the image inside a canvas element to display the video.\n\n\n#### Example\n```javascript\nvar options = {\n    cameraPosition: 'front',\n};\nwindow.plugin.CanvasCamera.start(options);\n```\n### `flashMode`\nSet flash mode for camera.<br>\n\n```javascript\nwindow.plugin.CanvasCamera.flashMode(true);\n```\n\n### `cameraPosition`\nChange input camera to 'front' or 'back' camera.\n\n```javascript\nwindow.plugin.CanvasCamera.cameraPosition('front');\n```\n\n### Options\nOptional parameters to customize the settings.\n\n```javascript\n{\n    width: 352,\n    height: 288,\n    canvas: {\n      width: 352,\n      height: 288\n    },\n    capture: {\n      width: 352,\n      height: 288\n    },\n    fps: 30,\n    use: 'file',\n    flashMode: false,\n    thumbnailRatio: 1/6,\n    cameraFacing: 'front' // or 'back',\n    onBeforeDraw: function(frame){\n      // do something before drawing a frame\n    },\n    onAfterDraw: function(frame){\n      // do something after drawing a frame\n    }\n}\n\n```\n- `width` : **Number**, optional, default : `352`, width in pixels of the video to capture **and** the output canvas width in pixels.\n- `height` : **Number**, optional, default : `288`, height in pixels of the video to capture **and** the output canvas height in pixels.\n\n- `capture.width` : **Number**, optional, default : `352`, width in pixels of the video to capture.\n- `capture.height` : **Number**, optional, default : `288`, height in pixels of the video to capture.\n\n- `canvas.width` : **Number**, optional, default : `352`, output canvas width in pixels.\n- `canvas.height` : **Number**, optional, default : `288`, output canvas height in pixels.\n\n- `fps` : **Number**, optional, default : `30`, desired number of frames per second.\n- `cameraFacing` : **String**, optional, default : `'front'`, `'front'` or `'back'`.\n- `flashMode` : **Boolean**, optional, default : `false`, a boolean to set flash mode on/off.\n- `thumbnailRatio` : **Number**, optional, default : `1/6`, a ratio used to scale down the thumbnail.\n\n- `use` : **String**, optional, default : `file`, `file` to use files for rendering (lower CPU / higher storage) or `data` to use base64 jpg data for rendering (higher cpu / lower storage).\n\n- `onBeforeDraw` : **Function**, optional, default : `null`, callback executed before a frame has been drawn. `frame` contains the canvas element, the image element, the tracking data, ...\n- `onAfterDraw` : **Function**, optional, default : `null`,  callback executed after a frame has been drawn. `frame` contains the canvas element, the image element, the tracking data, ...\n\n## Usage\n\n### Full size video only\n```javascript\nlet fullsizeCanvasElement = document.getElementById('fullsize-canvas');\n\nCanvasCamera.initialize(fullsizeCanvasElement);\n\nlet options:CanvasCamera.CanvasCameraOptions = {\n    cameraPosition: 'back',\n    onAfterDraw: function(frame) {\n      // do something with each frame\n    }\n};\n\nCanvasCamera.start(options);\n```\n\n### With thumbnail video\n```javascript\nlet fullsizeCanvasElement = document.getElementById('fullsize-canvas');\nlet thumbnailCanvasElement = document.getElementById('thumbnail-canvas');\n\nCanvasCamera.initialize(fullsizeCanvasElement, thumbnailCanvasElement);\n\nlet options:CanvasCamera.CanvasCameraOptions = {\n    cameraPosition: 'front',\n    fps: 15,\n    thumbnailRatio: 1/6,\n    onAfterDraw: function(frame) {\n      // do something with each frame of the fullsize canvas element only\n    }\n};\n\nCanvasCamera.start(options);\n```\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Added some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n## License\n\nThis software is released under the [MIT License][mit-license].\n\n[cordova]: https://cordova.apache.org\n[PGB]: http://docs.phonegap.com/phonegap-build/\n[CLI]: http://cordova.apache.org/docs/en/latest/guide/cli/index.html\n[mit-license]: https://opensource.org/licenses/MIT\n[npm-image]: https://img.shields.io/npm/v/com.virtuoworks.cordova-plugin-canvascamera.svg\n[npm-url]: https://www.npmjs.com/package/com.virtuoworks.cordova-plugin-canvascamera\n[downloads-image]: https://img.shields.io/npm/dm/com.virtuoworks.cordova-plugin-canvascamera.svg\n[downloads-url]: https://www.npmjs.com/package/com.virtuoworks.cordova-plugin-canvascamera\n[codacy-image]: https://api.codacy.com/project/badge/Grade/dcccd741d63d4b0ea51ae3ccb2cd7d89\n[codacy-url]: https://www.codacy.com/app/VirtuoWorks/CanvasCameraPlugin?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=VirtuoWorks/CanvasCameraPlugin&amp;utm_campaign=Badge_Grade\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/VirtuoWorks/CanvasCameraPlugin.git"
  },
  "version": "1.0.9"
}
